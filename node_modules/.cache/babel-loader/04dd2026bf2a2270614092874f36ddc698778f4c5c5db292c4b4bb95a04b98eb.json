{"ast":null,"code":"const API_URL = 'http://localhost:3010';\nexport const getProducts = async (filters = {}) => {\n  try {\n    const queryParams = new URLSearchParams();\n    const page = filters.page || 1;\n    const limit = filters.limit || 12;\n    queryParams.append('_page', page);\n    queryParams.append('_limit', limit);\n    const response = await fetch(`${API_URL}/products?${queryParams}`);\n    if (!response.ok) {\n      throw new Error('Failed to fetch products');\n    }\n    const products = await response.json();\n    let filteredProducts = [...products];\n    if (filters.tagSearch) {\n      const searchTerm = filters.tagSearch.toLowerCase();\n      filteredProducts = filteredProducts.filter(product => product.tags.some(tag => tag.toLowerCase().includes(searchTerm)));\n    }\n    if (filters.price && !isNaN(parseFloat(filters.price))) {\n      const maxPrice = parseFloat(filters.price);\n      filteredProducts = filteredProducts.filter(product => product.price <= maxPrice);\n    }\n    if (filters.subscription !== undefined) {\n      filteredProducts = filteredProducts.filter(product => product.subscription === filters.subscription);\n    }\n    return {\n      products: filteredProducts,\n      totalCount: filteredProducts.length,\n      totalPages: Math.ceil(filteredProducts.length / limit) || 1\n    };\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","getProducts","filters","queryParams","URLSearchParams","page","limit","append","response","fetch","ok","Error","products","json","filteredProducts","tagSearch","searchTerm","toLowerCase","filter","product","tags","some","tag","includes","price","isNaN","parseFloat","maxPrice","subscription","undefined","totalCount","length","totalPages","Math","ceil","error","console"],"sources":["/Users/svatoslavkondratcuk/Desktop/petlab-project/src/services/api.js"],"sourcesContent":["const API_URL = 'http://localhost:3010';\n\nexport const getProducts = async (filters = {}) => {\n    try {\n        const queryParams = new URLSearchParams();\n\n        const page = filters.page || 1;\n        const limit = filters.limit || 12;\n        queryParams.append('_page', page);\n        queryParams.append('_limit', limit);\n\n        const response = await fetch(`${API_URL}/products?${queryParams}`);\n\n        if (!response.ok) {\n            throw new Error('Failed to fetch products');\n        }\n\n        const products = await response.json();\n\n        let filteredProducts = [...products];\n\n        if (filters.tagSearch) {\n            const searchTerm = filters.tagSearch.toLowerCase();\n            filteredProducts = filteredProducts.filter(product =>\n                product.tags.some(tag => tag.toLowerCase().includes(searchTerm))\n            );\n        }\n\n        if (filters.price && !isNaN(parseFloat(filters.price))) {\n            const maxPrice = parseFloat(filters.price);\n            filteredProducts = filteredProducts.filter(product =>\n                product.price <= maxPrice\n            );\n        }\n\n        if (filters.subscription !== undefined) {\n            filteredProducts = filteredProducts.filter(product =>\n                product.subscription === filters.subscription\n            );\n        }\n\n        return {\n            products: filteredProducts,\n            totalCount: filteredProducts.length,\n            totalPages: Math.ceil(filteredProducts.length / limit) || 1\n        };\n    } catch (error) {\n        console.error('Error fetching products:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA,MAAMA,OAAO,GAAG,uBAAuB;AAEvC,OAAO,MAAMC,WAAW,GAAG,MAAAA,CAAOC,OAAO,GAAG,CAAC,CAAC,KAAK;EAC/C,IAAI;IACA,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAAC,CAAC;IAEzC,MAAMC,IAAI,GAAGH,OAAO,CAACG,IAAI,IAAI,CAAC;IAC9B,MAAMC,KAAK,GAAGJ,OAAO,CAACI,KAAK,IAAI,EAAE;IACjCH,WAAW,CAACI,MAAM,CAAC,OAAO,EAAEF,IAAI,CAAC;IACjCF,WAAW,CAACI,MAAM,CAAC,QAAQ,EAAED,KAAK,CAAC;IAEnC,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,OAAO,aAAaG,WAAW,EAAE,CAAC;IAElE,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IAEA,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAEtC,IAAIC,gBAAgB,GAAG,CAAC,GAAGF,QAAQ,CAAC;IAEpC,IAAIV,OAAO,CAACa,SAAS,EAAE;MACnB,MAAMC,UAAU,GAAGd,OAAO,CAACa,SAAS,CAACE,WAAW,CAAC,CAAC;MAClDH,gBAAgB,GAAGA,gBAAgB,CAACI,MAAM,CAACC,OAAO,IAC9CA,OAAO,CAACC,IAAI,CAACC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACL,WAAW,CAAC,CAAC,CAACM,QAAQ,CAACP,UAAU,CAAC,CACnE,CAAC;IACL;IAEA,IAAId,OAAO,CAACsB,KAAK,IAAI,CAACC,KAAK,CAACC,UAAU,CAACxB,OAAO,CAACsB,KAAK,CAAC,CAAC,EAAE;MACpD,MAAMG,QAAQ,GAAGD,UAAU,CAACxB,OAAO,CAACsB,KAAK,CAAC;MAC1CV,gBAAgB,GAAGA,gBAAgB,CAACI,MAAM,CAACC,OAAO,IAC9CA,OAAO,CAACK,KAAK,IAAIG,QACrB,CAAC;IACL;IAEA,IAAIzB,OAAO,CAAC0B,YAAY,KAAKC,SAAS,EAAE;MACpCf,gBAAgB,GAAGA,gBAAgB,CAACI,MAAM,CAACC,OAAO,IAC9CA,OAAO,CAACS,YAAY,KAAK1B,OAAO,CAAC0B,YACrC,CAAC;IACL;IAEA,OAAO;MACHhB,QAAQ,EAAEE,gBAAgB;MAC1BgB,UAAU,EAAEhB,gBAAgB,CAACiB,MAAM;MACnCC,UAAU,EAAEC,IAAI,CAACC,IAAI,CAACpB,gBAAgB,CAACiB,MAAM,GAAGzB,KAAK,CAAC,IAAI;IAC9D,CAAC;EACL,CAAC,CAAC,OAAO6B,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}